@using HealthGear.Helpers
@model Device

@{
    ViewData["Title"] = "Dettagli Dispositivo";
}

@if (TempData["SuccessMessage"] != null)
{
    <div id="tempDataMessage" class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
    TempData.Remove("SuccessMessage");
}

<h2 class="mb-4"><i class="fas fa-info-circle"></i> Dettagli Dispositivo</h2>

<!-- ðŸ“Œ Dati Generali -->
<div class="d-flex justify-content-between align-items-center mb-3">
    <h4><i class="fas fa-box"></i> Dati Generali</h4>
    <span class="badge bg-@(Model.Status switch
                          {
                              DeviceStatus.Attivo => "success",
                              _ => "secondary"
                          })"
          style="font-size: 1.2em; padding: 0.5em 1em;">
        @Model.Status.ToString()
    </span>
</div>

<hr/>
<table class="table">
    <tr>
        <th><i class="fas fa-folder-open"></i> Numero di Inventario</th>
        <td class="text-end">@Model.InventoryNumber</td>
    </tr>
    <tr>
        <th><i class="fas fa-tag"></i> Nome</th>
        <td class="text-end">@Model.Name</td>
    </tr>
    <tr>
        <th><i class="fas fa-industry"></i> Produttore</th>
        <td class="text-end">@Model.Brand</td>
    </tr>
    <tr>
        <th><i class="fas fa-barcode"></i> Modello</th>
        <td class="text-end">@Model.Model</td>
    </tr>
    <tr>
        <th><i class="fas fa-hashtag"></i> Numero di Serie</th>
        <td class="text-end">@Model.SerialNumber</td>
    </tr>
    <tr>
        <th><i class="fas fa-calendar-check"></i> Data Collaudo</th>
        <td class="text-end">@Model.DataCollaudo.ToString("dd/MM/yyyy")</td>
    </tr>
    @if (Model.Status == DeviceStatus.Dismesso)
    {
        <tr>
            <th><i class="fas fa-times-circle"></i> Data di Dismissione</th>
            <td class="text-end">@Model.DataDismissione?.ToString("dd/MM/yyyy")</td>
        </tr>
    }
</table>

<!-- ðŸ“Œ Manutenzione e Controlli -->
<h4 class="mt-5"><i class="fas fa-tools"></i> Manutenzione e Controlli</h4>
<hr/>
<table class="table">
    @if (Model.Status == DeviceStatus.Dismesso)
    {
        <tr>
            <td colspan="2" class="text-center">
                Il dispositivo Ã¨ dismesso; le scadenze non vengono aggiornate.
            </td>
        </tr>
    }
    else
    {
        <tr>
            <th><i class="fas fa-wrench"></i> Prossima Manutenzione</th>
            <td class="text-end @DueDateHelper.GetDueDateClass(Model.NextMaintenanceDue)">
                @DueDateHelper.GetDueDateText(Model.NextMaintenanceDue)
            </td>
        </tr>
        <tr>
            <th><i class="fas fa-bolt"></i> Prossima Verifica Elettrica</th>
            <td class="text-end @DueDateHelper.GetDueDateClass(Model.NextElectricalTestDue)">
                @DueDateHelper.GetDueDateText(Model.NextElectricalTestDue)
            </td>
        </tr>
        @if (Model.RequiresPhysicalInspection)
        {
            <tr>
                <th><i class="fas fa-radiation"></i> Prossima Verifica Fisica</th>
                <td class="text-end @DueDateHelper.GetDueDateClass(Model.NextPhysicalInspectionDue)">
                    @DueDateHelper.GetDueDateText(Model.NextPhysicalInspectionDue)
                </td>
            </tr>
        }
    }
</table>

<!-- ðŸ“Œ Storico Interventi Recenti -->
<h4 class="mt-5"><i class="fas fa-history"></i> Interventi Recenti</h4>
<hr/>
<div class="d-flex gap-2 mb-3">
    <a asp-action="Create" asp-controller="Intervention" asp-route-deviceId="@Model.Id" class="btn btn-success mb-3">
        <i class="fas fa-plus"></i> Aggiungi Intervento
    </a>
    <a asp-action="List" asp-controller="InterventionHistory" asp-route-deviceId="@Model.Id" class="btn btn-info mb-3">
        <i class="fas fa-clock-rotate-left"></i> Apri Storico Completo
    </a>
    <button class="btn btn-primary mb-3" data-bs-toggle="modal" data-bs-target="#exportReportModal">
        <i class="fas fa-file-download"></i> Scarica Report
    </button>
</div>
<hr/>

@if (Model.Interventions.Any())
{
    <table class="table table-striped table-bordered text-center shadow-sm">
        <thead>
        <tr>
            <th class="col-1">Data</th>
            <th class="col-3">Tipo</th>
            <th class="col-4">Note</th>
            <th class="col-2">Esito</th>
            <th class="col-4 text-center">Azioni</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var intervention in Model.Interventions.OrderByDescending(i => i.Date).Take(3))
        {
            <tr>
                <td>@intervention.Date.ToShortDateString()</td>
                <td>
                    <i class="@(intervention.Type switch
                              {
                                  InterventionType.Maintenance => "fas fa-wrench",
                                  InterventionType.ElectricalTest => "fas fa-bolt",
                                  _ => "fas fa-radiation"
                              })"></i>
                    @InterventionHelper.GetInterventionDisplayName(intervention)
                </td>
                <td>@(string.IsNullOrWhiteSpace(intervention.Notes) ? "<span class='text-muted'>Nessuna nota</span>" : intervention.Notes)</td>
                <td>
                    @if (intervention.Type == InterventionType.Maintenance)
                    {
                        <span class="text-muted">N/A</span>
                    }
                    else if (intervention.Passed.HasValue)
                    {
                        <span class="badge @(intervention.Passed.Value ? "bg-success" : "bg-danger")">
                                @(intervention.Passed.Value ? "Superato" : "Non Superato")
                            </span>
                    }
                    else
                    {
                        <span class="text-muted"> - </span>
                    }
                </td>
                <td class="text-center">
                    <a asp-action="Details" asp-controller="Intervention" asp-route-id="@intervention.Id"
                       class="btn btn-info btn-sm" title="Dettagli">
                        <i class="fas fa-eye"></i>
                    </a>
                    <a asp-action="Edit" asp-controller="Intervention" asp-route-id="@intervention.Id"
                       class="btn btn-warning btn-sm" title="Modifica">
                        <i class="fas fa-edit"></i>
                    </a>
                    <form asp-action="Delete" asp-controller="Intervention" asp-route-id="@intervention.Id"
                          method="post" class="d-inline">
                        <input type="hidden" name="returnUrl"
                               value="@Url.Action("Details", "Device", new { id = Model.Id })"/>
                        <button type="submit" class="btn btn-danger btn-sm"
                                onclick="return confirm('Sei sicuro di voler eliminare questo intervento?');"
                                title="Elimina">
                            <i class="fas fa-trash"></i>
                        </button>
                    </form>
                </td>
            </tr>
        }
        </tbody>
    </table>
}
else
{
    <p class="text-muted">Nessun intervento registrato per questo dispositivo.</p>
}

<div id="attachmentsContainer">
    @await Html.PartialAsync("_FileUploadPartial", new
    {
        DeviceId = Model.Id,
        InterventionId = (int?)null,
        Model.FileAttachments
    })
</div>


<!-- Pulsanti di Azione per il dispositivo -->
<div class="d-flex justify-content-between mt-4">
    <div>
        <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-warning">
            <i class="fas fa-edit"></i> Modifica Dispositivo
        </a>
        <a asp-action="Index" class="btn btn-outline-dark">
            <i class="fas fa-arrow-left"></i> Torna all'elenco
        </a>
    </div>
    <div>
        <button class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#deleteConfirmModal"
                @(Model.Interventions.Any() ? "hidden" : "")>
            <i class="fas fa-trash"></i> Elimina Dispositivo
        </button>
        <form asp-action="Archive" asp-controller="Device" asp-route-id="@Model.Id" method="post" class="d-inline">
            <button type="submit" class="btn @(Model.Status == DeviceStatus.Dismesso ? "btn-success" : "btn-dark")">
                <i class="fas @(Model.Status == DeviceStatus.Dismesso ? "fas fa-undo" : "fa-archive")"></i>
                @(Model.Status == DeviceStatus.Dismesso ? "Riattiva Dispositivo" : "Archivia Dispositivo")
            </button>
        </form>
    </div>
</div>

<!-- Modal per la scelta del formato del report -->
<div class="modal fade" id="exportReportModal" tabindex="-1" aria-labelledby="exportReportModalLabel"
     aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exportReportModalLabel"><i class="fas fa-file-alt"></i> Scegli il formato
                    del report</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Chiudi"></button>
            </div>
            <div class="modal-body text-center">
                <p>In quale formato vuoi scaricare il report?</p>
                <div class="d-flex justify-content-center gap-3">
                    <button class="btn btn-success" id="exportExcelBtn"><i class="fas fa-file-excel"></i> Excel</button>
                    <button class="btn btn-danger" id="exportPdfBtn"><i class="fas fa-file-pdf"></i> PDF</button>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal per conferma eliminazione dispositivo -->
<div class="modal fade" id="deleteConfirmModal" tabindex="-1" aria-labelledby="deleteConfirmModalLabel"
     aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteConfirmModalLabel">Conferma Eliminazione</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Chiudi"></button>
            </div>
            <div class="modal-body">
                <p><strong>Stai per eliminare il seguente dispositivo:</strong></p>
                <ul>
                    <li><strong>Nome:</strong> @Model.Name</li>
                    <li><strong>Marca:</strong> @Model.Brand</li>
                    <li><strong>Modello:</strong> @Model.Model</li>
                    <li><strong>Numero di Serie:</strong> @Model.SerialNumber</li>
                </ul>
                <p>Digita il nome del dispositivo per confermare:</p>
                <input type="text" id="confirmDeviceName" class="form-control" placeholder="Nome dispositivo">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annulla</button>
                <form id="deleteForm" method="post" action="@Url.Action("Delete", "Device", new { id = Model.Id })">
                    @Html.AntiForgeryToken()
                    <input type="hidden" id="hiddenConfirmName" name="confirmName" value="">
                    <button type="submit" class="btn btn-danger" id="confirmDeleteBtn" disabled>
                        <i class="fas fa-trash"></i> Conferma Eliminazione
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

@*SEZIONE SCRIPT*@

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            document.querySelector('input[name="__RequestVerificationToken"]');

            // Gestione conferma eliminazione dispositivo senza AJAX
            let confirmInput = document.getElementById("confirmDeviceName");
            let deleteBtn = document.getElementById("confirmDeleteBtn");
            let hiddenConfirmName = document.getElementById("hiddenConfirmName");
            let expectedName = "@Html.Raw(Model.Name)".trim();

            if (confirmInput && deleteBtn) {
                confirmInput.addEventListener("input", function () {
                    let userInput = this.value.trim();
                    deleteBtn.disabled = userInput !== expectedName;
                    hiddenConfirmName.value = userInput === expectedName ? userInput : "";
                });
            }

            // Chiusura automatica del modal report dopo click
            let reportModalEl = document.getElementById("exportReportModal");
            if (reportModalEl) {
                let reportModal = new bootstrap.Modal(reportModalEl);
                document.querySelectorAll("#exportReportModal .btn, #exportReportModal a").forEach(button => {
                    button.addEventListener("click", function () {
                        setTimeout(() => {
                            reportModal.hide();
                        }, 500);
                    });
                });
            }
        });
    </script>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            let exportPdfBtn = document.getElementById("exportPdfBtn");
            let exportExcelBtn = document.getElementById("exportExcelBtn");
            let exportReportModal = new bootstrap.Modal(document.getElementById("exportReportModal"));

            function downloadReport(format) {
                let deviceId = "@ViewBag.DeviceId";
                window.location.href = format === "pdf"
                    ? `/Report/GenerateDeviceDetailPdf/${deviceId}`
                    : `/Report/GenerateDeviceDetailExcel/${deviceId}`;
                exportReportModal.hide();
            }

            if (exportPdfBtn) {
                exportPdfBtn.addEventListener("click", function () {
                    downloadReport("pdf");
                });
            }
            if (exportExcelBtn) {
                exportExcelBtn.addEventListener("click", function () {
                    downloadReport("excel");
                });
            }
        });
    </script>
}