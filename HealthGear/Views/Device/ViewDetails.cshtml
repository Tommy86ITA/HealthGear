@using HealthGear.Helpers
@model Device

<h2 class="mb-4"><i class="fas fa-info-circle"></i> Dettagli Dispositivo</h2>

<!-- Dati Generali con Stato allineato a destra -->
<div class="d-flex justify-content-between align-items-center mb-3">
    <h4><i class="fas fa-box"></i> Dati Generali</h4>
    <span
        class="badge bg-@(Model.Status switch
                        {
                            DeviceStatus.Attivo => "success",
                            DeviceStatus.Guasto => "danger",
                            _ => "secondary"
                        })"
        style="font-size: 1.2em; padding: 0.5em 1em;">
        @Model.Status.ToString()
    </span>
</div>

<hr>
<table class="table">
    <tr>
        <th class="text-start"><i class="fas fa-tag"></i> Nome</th>
        <td class="text-end">@Model.Name</td>
    </tr>
    <tr>
        <th class="text-start"><i class="fas fa-industry"></i> Produttore</th>
        <td class="text-end">@Model.Brand</td>
    </tr>
    <tr>
        <th class="text-start"><i class="fas fa-barcode"></i> Modello</th>
        <td class="text-end">@Model.Model</td>
    </tr>
    <tr>
        <th class="text-start"><i class="fas fa-hashtag"></i> Numero di Serie</th>
        <td class="text-end">@Model.SerialNumber</td>
    </tr>
    <tr>
        <th class="text-start"><i class="fas fa-calendar-check"></i> Data collaudo</th>
        <td class="text-end">@Model.DataCollaudo.ToString("dd/MM/yyyy")</td>
    </tr>
</table>

<!-- Manutenzione e Controlli -->
<h4 class="mt-5"><i class="fas fa-tools"></i> Manutenzione e Controlli</h4>
<hr>
<table class="table">
    <tr>
        <th class="text-start"><i class="fas fa-wrench"></i> Prossima Manutenzione</th>
        <td class="text-end @DueDateHelper.GetDueDateClass(Model.NextMaintenanceDue)">
            @DueDateHelper.GetDueDateText(Model.NextMaintenanceDue)
        </td>
    </tr>
    <tr>
        <th class="text-start"><i class="fas fa-bolt"></i> Prossima Verifica Elettrica</th>
        <td class="text-end @DueDateHelper.GetDueDateClass(Model.NextElectricalTestDue)">
            @DueDateHelper.GetDueDateText(Model.NextElectricalTestDue)
        </td>
    </tr>

    @if (Model.RequiresPhysicalInspection)
    {
        <tr>
            <th class="text-start"><i class="fas fa-radiation"></i> Prossima Verifica Fisica</th>
            <td class="text-end @DueDateHelper.GetDueDateClass(Model.NextPhysicalInspectionDue)">
                @DueDateHelper.GetDueDateText(Model.NextPhysicalInspectionDue)
            </td>
        </tr>
    }
</table>

<!-- ðŸ”¥ Storico Interventi -->
<h4 class="mt-5"><i class="fas fa-history"></i> Interventi Recenti</h4>
<hr>
<a asp-action="Create" asp-controller="Intervention" asp-route-deviceId="@Model.Id" class="btn btn-success mb-3">
    <i class="fas fa-plus"></i> Aggiungi Intervento
</a>

@if (Model.Interventions.Any())
{
    <table class="table table-striped table-bordered text-center shadow-sm">
        <thead>
        <tr>
            <th>Data</th>
            <th>Tipo</th>
            <th>Note</th>
            <th>Esito</th>
            <th>Azioni</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var intervention in Model.Interventions.OrderByDescending(i => i.Date).Take(5))
        {
            <tr>
                <td>@intervention.Date.ToShortDateString()</td>
                <td>
                    <i class="@(intervention.Type switch
                              {
                                  InterventionType.Maintenance => "fas fa-wrench",
                                  InterventionType.ElectricalTest => "fas fa-bolt",
                                  _ => "fas fa-radiation"
                              })"></i>
                    @InterventionHelper.GetInterventionDisplayName(intervention)
                </td>
                <td>@(string.IsNullOrWhiteSpace(intervention.Notes) ? "<span class='text-muted'>Nessuna nota</span>" : intervention.Notes)</td>
                <td>
                    @if (intervention.Type == InterventionType.Maintenance)
                    {
                        <span class="text-muted">N/A</span>
                    }
                    else if (intervention.Passed.HasValue)
                    {
                        <span class="badge @(intervention.Passed.Value ? "bg-success" : "bg-danger")">
                            @(intervention.Passed.Value ? "Superato" : "Non Superato")
                        </span>
                    }
                    else
                    {
                        <span class="text-muted">N/A</span>
                    }
                </td>
                <td>
                    <a asp-action="Details" asp-controller="Intervention" asp-route-id="@intervention.Id"
                       class="btn btn-info btn-sm">
                        <i class="fas fa-eye"></i>
                    </a>
                    <a asp-action="Edit" asp-controller="Intervention" asp-route-id="@intervention.Id"
                       asp-route-returnUrl="@Url.Action("Details", "Device", new { id = Model.Id })"
                       class="btn btn-warning btn-sm">
                        <i class="fas fa-edit"></i>
                    </a>
                    <form asp-action="Delete" asp-controller="Intervention" asp-route-id="@intervention.Id"
                          method="post" class="d-inline">
                        <input type="hidden" name="returnUrl"
                               value="@Url.Action("Details", "Device", new { id = Model.Id })"/>
                        <button type="submit" class="btn btn-danger btn-sm"
                                onclick="return confirm('Sei sicuro di voler eliminare questo intervento?');">
                            <i class="fas fa-trash"></i>
                        </button>
                    </form>
                </td>
            </tr>
        }
        </tbody>
    </table>

    <!-- âœ… Pulsante per accedere allo STORICO INTERVENTI -->
    <div class="text-center mt-3">
        <a asp-action="List" asp-controller="InterventionHistory" asp-route-deviceId="@Model.Id" class="btn btn-info">
            <i class="fas fa-clock-rotate-left"></i> Apri Storico Completo
        </a>

        <!-- Pulsante per aprire il modal -->
        <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#deviceReportModal">
            <i class="fas fa-file-download"></i> Scarica Report
        </button>

        <!-- Modal per la selezione del formato -->
        <div class="modal fade" id="deviceReportModal" tabindex="-1" aria-labelledby="deviceReportModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="deviceReportModalLabel">Scarica Report Dispositivo</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body text-center">
                        <p>Seleziona il formato del report:</p>
                        <a href="@Url.Action("GenerateDeviceDetailsExcel", "Report", new { id = Model.Id })" class="btn btn-success">
                            <i class="fas fa-file-excel"></i> Excel
                        </a>
                        <a href="@Url.Action("GenerateDeviceDetailPdf", "Report", new { id = Model.Id })" class="btn btn-danger">
                            <i class="fas fa-file-pdf"></i> PDF
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
else
{
    <p class="text-muted">Nessun intervento registrato per questo dispositivo.</p>
}

<!-- Pulsanti Azioni -->
<div class="d-flex justify-content-between mt-4">
    <div>
        <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-warning">
            <i class="fas fa-edit"></i> Modifica Dispositivo
        </a>
        <a asp-action="Index" class="btn btn-secondary">
            <i class="fas fa-arrow-left"></i> Torna all'elenco
        </a>
    </div>

    <div>
        @if (!Model.Interventions.Any())
        {
            <button class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#deleteConfirmModal">
                <i class="fas fa-trash"></i> Elimina Dispositivo
            </button>
        }
        else
        {
            <button class="btn btn-dark archive-btn" data-id="@Model.Id">
                <i class="fas fa-archive"></i> Archivia Dispositivo
            </button>
        }
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            let tokenElement = document.querySelector('input[name="__RequestVerificationToken"]');
            let token = tokenElement ? tokenElement.value : "";

            function fetchRequest(url, method, successMessage, errorMessage) {
                fetch(url, {
                    method,
                    headers: {
                        "Content-Type": "application/json",
                        "RequestVerificationToken": token
                    }
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            alert(successMessage);
                            window.location.reload();
                        } else {
                            alert(data.message || errorMessage);
                        }
                    })
                    .catch(error => alert(errorMessage + ": " + error.message));
            }

            // ðŸ”¹ Gestione pulsante di archiviazione
            document.querySelector(".archive-btn")?.addEventListener("click", function () {
                let deviceId = this.getAttribute("data-id");
                if (!confirm("Sei sicuro di voler impostare come Dismesso e archiviare questo dispositivo?")) return;
                fetchRequest(`/Device/Archive/${deviceId}`, "POST", "Il dispositivo Ã¨ stato archiviato con successo!", "Errore durante l'archiviazione.");
            });
        });
    </script>
    
    <script>
    document.addEventListener("DOMContentLoaded", function () {
        let reportModal = new bootstrap.Modal(document.getElementById('deviceReportModal'));

        document.querySelectorAll("#deviceReportModal a").forEach(button => {
            button.addEventListener("click", function () {
                setTimeout(() => {
                    reportModal.hide();
                }, 500); // Ritardo di 500ms per assicurarsi che l'azione parta prima della chiusura
            });
        });
    });
</script>
}
