@using HealthGear.Helpers
@model DeviceListViewModel

@{
    ViewData["Title"] = "Elenco Dispositivi";
}

<h2 class="mb-4"><i class="fas fa-clipboard-list"></i> Elenco Dispositivi</h2>

<a asp-action="Create" class="btn btn-success mb-3">
    <i class="fas fa-plus"></i> Aggiungi Dispositivo
</a>

@Html.AntiForgeryToken() <!-- ðŸ”¹ Token CSRF per le richieste AJAX -->

<!-- Tabs per separare dispositivi attivi e dismessi -->
<ul class="nav nav-tabs">
    <li class="nav-item">
        <a class="nav-link @(Model.StatusFilter == "attivi" ? "active" : "")" asp-action="Index"
           asp-route-statusFilter="attivi">Attivi</a>
    </li>
    <li class="nav-item">
        <a class="nav-link @(Model.StatusFilter == "dismessi" ? "active" : "")" asp-action="Index"
           asp-route-statusFilter="dismessi">Dismessi</a>
    </li>
</ul>

@if (Model.StatusFilter == "attivi")
{
    <h4><i class="fas fa-clipboard"></i> Dispositivi Attivi</h4>
}
else
{
    <h4><i class="fas fa-archive"></i> Dispositivi Dismessi</h4>
}

<table class="table table-striped table-bordered text-center">
    <thead class="thead-dark">
    <tr>
        <th><i class="fas fa-tag"></i> Nome</th>
        <th><i class="fas fa-industry"></i> Produttore</th>
        <th><i class="fas fa-barcode"></i> Modello</th>
        <th><i class="fas fa-hashtag"></i> Numero di Serie</th>
        <th><i class="fas fa-wrench"></i> Manutenzione</th>
        <th class="text-center"><i class="fas fa-bolt"></i> Verifica Elettrica</th>
        <th class="text-center"><i class="fas fa-radiation"></i> Controllo Fisico</th>
        <th class="text-center"><i class="fas fa-cogs"></i> Azioni</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var device in Model.StatusFilter == "attivi" ? Model.ActiveDevices : Model.ArchivedDevices)
    {
        <tr id="device-row-@device.Id" data-has-interventions="@(device.Interventions.Any().ToString().ToLower())">
            <td>@device.Name</td>
            <td>@device.Brand</td>
            <td>@device.Model</td>
            <td>@device.SerialNumber</td>

            <td>
                <span class="@(DueDateHelper.GetDueDateClass(device.NextMaintenanceDue))">
                    @(device.NextMaintenanceDue?.ToShortDateString() ?? "N/A")
                </span>
            </td>

            <td>
                <span class="@(DueDateHelper.GetDueDateClass(device.NextElectricalTestDue))">
                    @(device.NextElectricalTestDue?.ToShortDateString() ?? "N/A")
                </span>
            </td>

            <td>
                <span class="@(DueDateHelper.GetDueDateClass(device.NextPhysicalInspectionDue))">
                    @(device.NextPhysicalInspectionDue?.ToShortDateString() ?? "N/A")
                </span>
            </td>
            <td>
                <a asp-action="Details" asp-route-id="@device.Id" class="btn btn-info btn-sm" title="Dettagli">
                    <i class="fas fa-eye"></i>
                </a>

                @if (Model.StatusFilter == "attivi")
                {
                    <a asp-action="Edit" asp-route-id="@device.Id" class="btn btn-warning btn-sm" title="Modifica">
                        <i class="fas fa-edit"></i>
                    </a>

                    <!-- ðŸ”¹ Pulsante di Archiviazione SEMPRE visibile -->
                    <button class="btn btn-dark btn-sm archive-btn" data-id="@device.Id"
                            title="Dismetti e archivia il dispositivo">
                        <i class="fas fa-archive"></i>
                    </button>
                }
                else
                {
                    <!-- ðŸ”¹ Pulsante per RIATTIVARE dispositivi dismessi -->
                    <button class="btn btn-success btn-sm restore-btn" data-id="@device.Id"
                            title="Riattiva Dispositivo">
                        <i class="fas fa-undo"></i>
                    </button>
                }
            </td>
        </tr>
    }
    </tbody>
</table>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        let tokenElement = document.querySelector('input[name="__RequestVerificationToken"]');
        let token = tokenElement ? tokenElement.value : "";

        function fetchRequest(url, method, successMessage, errorMessage) {
            fetch(url, {
                method,
                headers: {
                    "Content-Type": "application/json",
                    "RequestVerificationToken": token
                }
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert(successMessage);
                        location.reload();
                    } else {
                        alert(data.message || errorMessage);
                    }
                })
                .catch(error => alert(errorMessage + ": " + error.message));
        }

        // ðŸ”¹ Nascondere il pulsante di eliminazione per i dispositivi con interventi registrati
        document.querySelectorAll("tr[id^='device-row-']").forEach(row => {
            let deleteBtn = row.querySelector(".delete-btn");
            let hasInterventions = row.getAttribute("data-has-interventions") === "true";

            if (hasInterventions) {
                // Se ha interventi â†’ Nasconde SOLO il pulsante di eliminazione
                if (deleteBtn) deleteBtn.style.display = "none";
            }
        });

        // ðŸ”¹ Funzione per archiviare un dispositivo (SEMPRE visibile)
        document.querySelectorAll(".archive-btn").forEach(button =>
            button.addEventListener("click", function () {
                let deviceId = this.getAttribute("data-id");
                if (!confirm("Sei sicuro di voler archiviare questo dispositivo?")) return;
                fetchRequest(`/Device/Archive/${deviceId}`, "POST", "Il dispositivo Ã¨ stato archiviato con successo!", "Errore durante l'archiviazione.");
            }));

        // ðŸ”¹ Funzione per riattivare un dispositivo dismesso
        document.querySelectorAll(".restore-btn").forEach(button =>
            button.addEventListener("click", function () {
                let deviceId = this.getAttribute("data-id");
                if (!confirm("Sei sicuro di voler riattivare questo dispositivo?")) return;
                fetchRequest(`/Device/Restore/${deviceId}`, "POST", "Il dispositivo Ã¨ stato riattivato con successo!", "Errore durante la riattivazione.");
            }));
    });
</script>