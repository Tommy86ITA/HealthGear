@using HealthGear.Models.Settings
@model HealthGear.Models.ViewModels.UserViewModel

@{
    ViewData["Title"] = "Crea Nuovo Utente";
    var passwordRules = ViewData["PasswordRules"] as PasswordRules;
}

<h2 class="mb-4 text-center" style="font-size: 1.5rem; font-weight: bold;"><i class="fas fa-user-plus"></i> Crea Nuovo
    Utente</h2>

<div class="card p-4 mx-auto" style="max-width: 600px;">
    <!-- Form per la creazione di un nuovo utente -->
    <form asp-action="Create" method="post" class="needs-validation" novalidate>
        @Html.AntiForgeryToken()

        <div class="row mb-4">
            <div class="col-md-12">
                <!-- Nome Completo -->
                <div class="mb-3">
                    <label asp-for="FullName" class="form-label">Nome Completo</label>
                    <input asp-for="FullName" class="form-control" required/>
                    <span asp-validation-for="FullName" class="text-danger"></span>
                </div>

                <!-- Username -->
                <div class="mb-3">
                    <label asp-for="UserName" class="form-label">Username</label>
                    <input asp-for="UserName" class="form-control" required/>
                    <span asp-validation-for="UserName" class="text-danger"></span>
                </div>

                <!-- Email -->
                <div class="mb-3">
                    <label asp-for="Email" class="form-label">Email</label>
                    <input asp-for="Email" class="form-control" type="email" required/>
                    <span asp-validation-for="Email" class="text-danger"></span>
                </div>

                <!-- Ruolo (Dropdown) -->
                <div class="mb-3">
                    <label asp-for="Role" class="form-label">Ruolo</label>
                    <select asp-for="Role" class="form-select" asp-items="new SelectList(Model.AvailableRoles)">
                        <option value="">Seleziona un ruolo...</option>
                    </select>
                    <span asp-validation-for="Role" class="text-danger"></span>
                </div>
            </div>
        </div>

        <!-- Messaggio sulle password -->
        @if (passwordRules != null)
        {
            <div class="alert alert-warning">
                <i class="fas fa-exclamation-circle"></i>
                La password iniziale verr√† generata automaticamente e comunicata all'utente.
                <ul class="mt-2">
                    <li>Minimo: @passwordRules.MinLength caratteri</li>
                    <li>@(passwordRules.RequireUppercase ? "Almeno una lettera maiuscola" : "Lettere maiuscole non richieste")</li>
                    <li>@(passwordRules.RequireLowercase ? "Almeno una lettera minuscola" : "Lettere minuscole non richieste")</li>
                    <li>@(passwordRules.RequireDigit ? "Almeno una cifra" : "Cifre non richieste")</li>
                    <li>@(passwordRules.RequireNonAlphanumeric ? "Almeno un carattere speciale" : "Caratteri speciali non richiesti")</li>
                </ul>
            </div>
        }

        <!-- Pulsanti di salvataggio e ritorno -->
        <div class="mt-4 d-flex justify-content-between">
            <button type="submit" class="btn btn-success">
                <i class="fas fa-save"></i> Salva
            </button>
            <a asp-action="Index" class="btn btn-outline-secondary">
                <i class="fas fa-arrow-left"></i> Torna alla lista
            </a>
        </div>
    </form>
</div>

<!-- Inclusione script di validazione lato client -->

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}