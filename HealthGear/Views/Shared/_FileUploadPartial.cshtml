@using HealthGear.Constants
@using HealthGear.Helpers
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model dynamic

<!-- Header -->
<h4 class="mt-5"><i class="fas fa-file"></i> Documenti Allegati</h4>
<hr/>

<!-- Elenco allegati: se ci sono file, mostra la tabella, altrimenti un messaggio -->
@if (Model.FileAttachments != null && Model.FileAttachments.Count > 0)
{
    <table class="table table-striped table-bordered text-center shadow-sm">
        <thead>
        <tr>
            <th class="col-4">Nome File</th>
            <th class="col-3">Tipo Documento</th>
            <th class="col-3">Caricato il</th>
            <th class="col-2">Azioni</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var attachment in Model.FileAttachments)
        {
            <tr id="attachment-@attachment.Id">
                <td>@attachment.FileName</td>
                <td>@attachment.DocumentType</td>
                <td>@attachment.UploadDate.ToString("dd/MM/yyyy HH:mm")</td>
                <td>
                    <!-- Pulsante per scaricare il file (sempre visibile) -->
                    <a asp-action="Download"
                       asp-controller="FileAttachments"
                       asp-route-id="@attachment.Id"
                       class="btn btn-info btn-sm"
                       title="Scarica File">
                        <i class="fas fa-download"></i>
                    </a>

                    <!-- Pulsante per eliminare il file (solo Admin e Tecnico) -->
                    @if (User.IsInRole(Roles.Admin) || User.IsInRole(Roles.Tecnico))
                    {
                        <form method="post"
                              asp-action="Delete"
                              asp-controller="FileAttachments"
                              asp-route-id="@attachment.Id"
                              class="d-inline deleteAttachmentForm"
                              data-attachment-id="@attachment.Id">
                            @Html.AntiForgeryToken()
                            <button type="submit"
                                    class="btn btn-danger btn-sm"
                                    onclick="return confirm('Eliminare il file @attachment.FileName?');"
                                    title="Elimina File">
                                <i class="fas fa-trash"></i>
                            </button>
                        </form>
                    }
                </td>
            </tr>
        }
        </tbody>
    </table>
}
else
{
    <p class="text-muted">
        @if (Model.InterventionId != null)
        {
            @:Nessun documento caricato per questo intervento.
        }
        else
        {
            @:Nessun documento caricato per questo dispositivo.
        }
    </p>
}

<!-- Sezione Upload visibile solo a Admin e Tecnico -->
@if (User.IsInRole(Roles.Admin) || User.IsInRole(Roles.Tecnico))
{
    <hr/>

    <form id="ajaxUploadForm" method="post" enctype="multipart/form-data" class="row g-3">
        @Html.AntiForgeryToken()

        <input type="hidden" name="deviceId" value="@Model.DeviceId"/>

        @if (Model.InterventionId != null)
        {
            <input type="hidden" name="interventionId" value="@Model.InterventionId"/>
        }

        <div class="col-md-4">
            <label for="documentType" class="form-label">Tipo Documento</label>
            @if (Model.InterventionId != null)
            {
                <select name="documentType" id="documentType" class="form-select">
                    <option value="Verbale">Verbale intervento</option>
                </select>
            }
            else
            {
                <select name="documentType" id="documentType" class="form-select">
                    <option value="Collaudo">Collaudo</option>
                    <option value="Certificazione">Certificazione</option>
                    <option value="Manuale">Manuale</option>
                    <option value="Altro">Altro</option>
                </select>
            }
        </div>

        <div class="col-md-8">
            <label for="files" class="form-label">Seleziona file</label>
            <input type="file" name="files" id="files" multiple class="form-control"/>
        </div>

        <div class="col-12">
            <button type="submit" class="btn btn-primary" id="uploadBtn" disabled>
                <i class="fas fa-upload"></i> Carica file
            </button>
        </div>
    </form>
}

@{
    // Registra gli script via helper per gestire l'upload e la cancellazione in AJAX.
    // NOTA: questo script usa binding delegato, quindi funziona anche se la partial viene ricaricata.
    Html.RegisterScriptBlock(@"
        <script>
            (function(){
                $(document).ready(function(){
                    // Upload file: intercetta il submit del form con id 'ajaxUploadForm'
                    $(document).on('submit', '#ajaxUploadForm', function(e){
                        e.preventDefault();
                        var form = $(this);
                        var formData = new FormData(this);
                        $.ajax({
                            url: '" + Url.Action("AjaxUpload", "FileAttachments") + @"',
                            type: 'POST',
                            data: formData,
                            processData: false,
                            contentType: false,
                            xhr: function(){
                                var xhr = new XMLHttpRequest();
                                xhr.upload.addEventListener('progress', function(e){
                                    if(e.lengthComputable){
                                        var percentComplete = Math.round((e.loaded / e.total) * 100);
                                        console.log('Upload progress: ' + percentComplete + '%');
                                        // Qui puoi aggiornare una progress bar, se desideri
                                    }
                                }, false);
                                return xhr;
                            },
                            success: function(result){
                                if(result.success){
                                    // Sostituisce il contenuto del container nella view principale.
                                    // Assicurati che nella view principale esista un <div id='attachmentsContainer'>.
                                    $('#attachmentsContainer').html(result.html);
                                    form.find('#files').val('');
                                    form.find('#uploadBtn').prop('disabled', true);
                                } else {
                                    alert('Errore: ' + result.errorMessage);
                                }
                            },
                            error: function(){
                                alert('Errore durante il caricamento dei file.');
                            }
                        });
                        return false;
                    });
                    
                    // Abilita/disabilita il pulsante upload in base alla selezione dei file
                    $(document).on('change', '#files', function(){
                        if(this.files && this.files.length > 0){
                            $('#uploadBtn').prop('disabled', false);
                        } else {
                            $('#uploadBtn').prop('disabled', true);
                        }
                    });
                    
                    // Cancellazione file: intercetta il submit dei form con classe 'deleteAttachmentForm'
                    $(document).on('submit', '.deleteAttachmentForm', function(e){
                        e.preventDefault();
                        if(!confirm('Sei sicuro di voler eliminare questo file?')){
                            return false;
                        }
                        var form = $(this);
                        var attachmentId = form.data('attachment-id');
                        $.ajax({
                            url: form.attr('action'),
                            type: 'POST',
                            data: form.serialize(),
                            success: function(result){
                                if(result.success){
                                    $('#attachment-' + attachmentId).fadeOut('slow', function(){
                                        $(this).remove();
                                    });
                                    alert('File eliminato con successo!');
                                } else {
                                    alert('Errore: ' + result.errorMessage);
                                }
                            },
                            error: function(){
                                alert('Si Ã¨ verificato un errore durante l\'eliminazione del file.');
                            }
                        });
                        return false;
                    });
                });
            })();
        </script>
    ");
}