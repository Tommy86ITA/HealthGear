@model HealthGear.Models.ViewModels.InterventionHistoryViewModel

@{
    ViewData["Title"] = "Storico Interventi";
}

<h2 class="mb-2">
    <i class="fas fa-clock-rotate-left"></i> Storico Interventi per
    <strong>@ViewBag.DeviceBrand @ViewBag.DeviceModel</strong>
</h2>
<p class="text-muted">
    <i class="fas fa-tag"></i> @ViewBag.DeviceName |
    <i class="fas fa-hashtag"></i> S/N: @ViewBag.DeviceSerialNumber |
    <i class="fas fa-folder-open"></i> Inv. N.° @ViewBag.DeviceInventoryNumber
</p>

<!-- Form per i filtri -->
<form id="filtersForm" method="get" action="@Url.Action("List", "InterventionHistory")" class="row mb-4">
    <input type="hidden" name="deviceId" value="@ViewBag.DeviceId"/>

    <!-- Barra di ricerca su tutta la larghezza -->
    <div class="col-md-12 mb-3">
        <label for="searchQuery" class="form-label">Ricerca Note</label>
        <input type="text" name="searchQuery" id="searchQuery"
               class="form-control"
               placeholder="Cerca nelle note..."
               value="@ViewBag.SearchQuery"/>
    </div>

    <!-- Altra riga per i restanti campi di filtro (Tipo, Date, Esito) -->
    <div class="col-md-3">
        <label for="typeFilter" class="form-label">Tipo Intervento</label>
        <select name="typeFilter" id="typeFilter" class="form-select">
            <option value="">-- Tutti --</option>
            @if (ViewBag.TypeFilter as string == "Maintenance")
            {
                <option value="Maintenance" selected>Manutenzione</option>
            }
            else
            {
                <option value="Maintenance">Manutenzione</option>
            }
            @if (ViewBag.TypeFilter as string == "ElectricalTest")
            {
                <option value="ElectricalTest" selected>Verifica Elettrica</option>
            }
            else
            {
                <option value="ElectricalTest">Verifica Elettrica</option>
            }
            @if (ViewBag.TypeFilter as string == "PhysicalInspection")
            {
                <option value="PhysicalInspection" selected>Verifica Fisica</option>
            }
            else
            {
                <option value="PhysicalInspection">Verifica Fisica</option>
            }
        </select>
    </div>

    <div class="col-md-3">
        <label for="dateFrom" class="form-label">Da</label>
        <input type="date" name="dateFrom" id="dateFrom" class="form-control" value="@ViewBag.DateFrom"/>
    </div>

    <div class="col-md-3">
        <label for="dateTo" class="form-label">A</label>
        <input type="date" name="dateTo" id="dateTo" class="form-control" value="@ViewBag.DateTo"/>
    </div>

    <div class="col-md-3">
        <label for="passedFilter" class="form-label">Esito</label>
        <select name="passedFilter" id="passedFilter" class="form-select">
            @if (string.IsNullOrEmpty(ViewBag.PassedFilter as string))
            {
                <option value="" selected>Qualsiasi</option>
            }
            else
            {
                <option value="">Qualsiasi</option>
            }

            @if (ViewBag.PassedFilter as string == "true")
            {
                <option value="true" selected>Superato</option>
            }
            else
            {
                <option value="true">Superato</option>
            }

            @if (ViewBag.PassedFilter as string == "false")
            {
                <option value="false" selected>Non Superato</option>
            }
            else
            {
                <option value="false">Non Superato</option>
            }
        </select>
    </div>

    <!-- Pulsanti di azione (Filtra e Reset) -->
    <div class="col-md-12 d-flex align-items-end justify-content-between mt-3">
        <div>
            <button type="submit" class="btn btn-primary">
                <i class="fas fa-filter"></i> Filtra
            </button>
            <a href="@Url.Action("List", "InterventionHistory", new { deviceId = ViewBag.DeviceId })"
               class="btn btn-secondary">
                <i class="fas fa-redo"></i> Reset
            </a>
        </div>
        <div class="d-flex gap-2">
            <a asp-action="Create" asp-controller="Intervention" asp-route-deviceId="@ViewBag.DeviceId"
               class="btn btn-success">
                <i class="fas fa-plus"></i> Aggiungi Intervento
            </a>
            <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exportReportModal">
                <i class="fas fa-file-download"></i> Scarica Report
            </button>
            <a asp-action="Details" asp-controller="Device" asp-route-id="@ViewBag.DeviceId"
               class="btn btn-outline-dark">
                <i class="fas fa-arrow-left"></i> Torna al Dispositivo
            </a>
        </div>
    </div>
</form>

<!-- Container che contiene la partial dello storico interventi -->
<div id="interventionHistoryList">
    @await Html.PartialAsync("_InterventionHistoryPartial", Model)
</div>

<!-- Modal per la scelta del formato del report -->
<div class="modal fade" id="exportReportModal" tabindex="-1" aria-labelledby="exportReportModalLabel"
     aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exportReportModalLabel">
                    <i class="fas fa-file-alt"></i> Scegli il formato del report
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Chiudi"></button>
            </div>
            <div class="modal-body text-center">
                <p>In quale formato vuoi scaricare il report?</p>
                <div class="d-flex justify-content-center gap-3">
                    <button type="button" class="btn btn-success" id="exportExcelBtn">
                        <i class="fas fa-file-excel"></i> Excel
                    </button>
                    <button type="button" class="btn btn-danger" id="exportPdfBtn">
                        <i class="fas fa-file-pdf"></i> PDF
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Funzione per caricare via AJAX la partial dello storico interventi
        function loadInterventions(url) {
            $.ajax({
                url: url,
                type: "GET",
                success: function (data) {
                    $("#interventionHistoryList").html(data);
                },
                error: function () {
                    alert("Si è verificato un errore durante il caricamento dello storico interventi.");
                }
            });
        }

        // Intercetta il submit del form dei filtri
        $("#filtersForm").submit(function (e) {
            e.preventDefault();
            const url = $(this).attr("action");
            const queryString = $(this).serialize();
            loadInterventions(url + "?" + queryString);
        });

        // Intercetta i click sui link di paginazione all'interno della partial
        $(document).on("click", ".pagination a", function (e) {
            e.preventDefault();
            const url = $(this).attr("href");
            loadInterventions(url);
        });
    </script>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Recupera l'elemento modal e crea l'istanza Bootstrap
            let modalEl = document.getElementById("exportReportModal");
            if (!modalEl) {
                console.error("Modal 'exportReportModal' non trovato.");
                return;
            }
            let reportModal = new bootstrap.Modal(modalEl);

            // Recupera i pulsanti del modal
            let exportExcelBtn = document.getElementById("exportExcelBtn");
            let exportPdfBtn = document.getElementById("exportPdfBtn");

            // Funzione per il download del report
            function downloadReport(format) {
                // Assicurati che ViewBag.DeviceId sia valorizzato
                let deviceId = "@ViewBag.DeviceId";
                if (format === "pdf") {
                    window.location.href = `/Report/GenerateDeviceDetailPdf/${deviceId}`;
                } else {
                    window.location.href = `/Report/GenerateDeviceDetailExcel/${deviceId}`;
                }
                // Nascondi il modal
                reportModal.hide();
            }

            // Collega gli eventi di click ai pulsanti
            if (exportExcelBtn) {
                exportExcelBtn.addEventListener("click", function () {
                    downloadReport("excel");
                });
            }
            if (exportPdfBtn) {
                exportPdfBtn.addEventListener("click", function () {
                    downloadReport("pdf");
                });
            }
        });
    </script>

}