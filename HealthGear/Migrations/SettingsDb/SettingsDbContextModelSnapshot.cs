// <auto-generated />
using HealthGear.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HealthGear.Migrations.SettingsDb
{
    [DbContext(typeof(SettingsDbContext))]
    partial class SettingsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("HealthGear.Models.Config.AppConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("AppConfig");
                });

            modelBuilder.Entity("HealthGear.Models.Config.AppConfig", b =>
                {
                    b.OwnsOne("HealthGear.Models.Config.LoggingConfig", "Logging", b1 =>
                        {
                            b1.Property<int>("Id")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("LogLevel")
                                .HasColumnType("INTEGER");

                            b1.HasKey("Id");

                            b1.ToTable("AppConfig");

                            b1.WithOwner()
                                .HasForeignKey("Id");
                        });

                    b.OwnsOne("HealthGear.Models.Config.SmtpConfig", "Smtp", b1 =>
                        {
                            b1.Property<int>("Id")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Host")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("Password")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<int>("Port")
                                .HasColumnType("INTEGER");

                            b1.Property<bool>("RequiresAuthentication")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("SenderEmail")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("SenderName")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<bool>("UseSsl")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Username")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.HasKey("Id");

                            b1.ToTable("AppConfig");

                            b1.WithOwner()
                                .HasForeignKey("Id");
                        });

                    b.Navigation("Logging")
                        .IsRequired();

                    b.Navigation("Smtp")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
