// <auto-generated />
using System;
using HealthGear.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HealthGear.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.1");

            modelBuilder.Entity("HealthGear.Models.Device", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataCollaudo")
                        .HasColumnType("TEXT");

                    b.Property<int>("DeviceType")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FirstElectricalTest")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("FirstPhysicalInspection")
                        .HasColumnType("TEXT");

                    b.Property<string>("InventoryNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("TEXT");

                    b.Property<string>("Location")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("NextElectricalTestDue")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("NextMaintenanceDue")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("NextPhysicalInspectionDue")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .HasMaxLength(2000)
                        .HasColumnType("TEXT");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("HealthGear.Models.FileDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DeviceName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int?>("InterventionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("InterventionType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("ParentEntityId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UploadedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("InterventionId");

                    b.ToTable("FileDocuments");
                });

            modelBuilder.Entity("HealthGear.Models.Intervention", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("DeviceId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MaintenanceCategory")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool?>("Passed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PerformedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.ToTable("Interventions");
                });

            modelBuilder.Entity("HealthGear.Models.MaintenanceSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ElectricalTestIntervalMonths")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaintenanceIntervalMonths")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MammographyInspectionIntervalMonths")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PhysicalInspectionIntervalMonths")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("MaintenanceSettings");
                });

            modelBuilder.Entity("HealthGear.Models.FileDocument", b =>
                {
                    b.HasOne("HealthGear.Models.Intervention", null)
                        .WithMany("Attachments")
                        .HasForeignKey("InterventionId");
                });

            modelBuilder.Entity("HealthGear.Models.Intervention", b =>
                {
                    b.HasOne("HealthGear.Models.Device", "Device")
                        .WithMany("Interventions")
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Device");
                });

            modelBuilder.Entity("HealthGear.Models.Device", b =>
                {
                    b.Navigation("Interventions");
                });

            modelBuilder.Entity("HealthGear.Models.Intervention", b =>
                {
                    b.Navigation("Attachments");
                });
#pragma warning restore 612, 618
        }
    }
}
